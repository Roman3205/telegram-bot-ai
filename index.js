require('dotenv').config()

const { Telegraf } = require('telegraf')
const { message } = require('telegraf/filters')
let openAI = require('openai')

let openai = new openAI({
    apiKey: process.env.OPENAI_KEY
})

const bot = new Telegraf(process.env.TOKEN)

bot.start((ctx) => ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:', {
    reply_markup: {
      keyboard: [
        ['/start', '/help'],
        ['/info', '/quit'],
      ],
      resize_keyboard: true,
      one_time_keyboard: false,
    },
}))
bot.help((ctx) => ctx.reply('–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /ask "–≤–æ–ø—Ä–æ—Å"'))
bot.on(message('sticker'), (ctx) => ctx.reply('üëç'))
bot.hears(['–ü—Ä–∏–≤–µ—Ç', '–ø—Ä–∏–≤–µ—Ç'], (ctx) => ctx.reply('–ü—Ä–∏–≤–µ—Ç, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?'))

bot.command('quit', async (ctx) => {
    try {
        let chatId = ctx.message.chat.id
        let userId = ctx.from.id

        if (ctx.message.chat.type === 'group' || ctx.message.chat.type === 'supergroup') {
            await ctx.telegram.kickChatMember(chatId, userId)
            await ctx.reply('–Ø –ø–æ–∫–∏–¥–∞—é —ç—Ç–æ—Ç —á–∞—Ç.')
        } else {
            await ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –º–æ–≥—É –ø–æ–∫–∏–Ω—É—Ç—å –ª–∏—á–Ω—ã–µ —á–∞—Ç—ã.')
        }
    } catch (error) {
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
    }
  })

bot.command('ask', async(ctx) => {
    try {
      if(ctx.message.text.split(' ').length == 1) {
        return await ctx.reply('–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å —Ç–µ–∫—Å—Ç–æ–º')
      } 

      let prompt = ctx.message.text.split(' ').splice(1).join(' ')
      let response = await openai.chat.completions.create({
          model: 'gpt-3.5-turbo',
          messages: [
              { role: 'user', content: prompt },
          ]
      })
      
      await ctx.reply(response.choices[0].message.content)

    } catch (error) {
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
    }
})

bot.command('info', async(ctx) => {
  try {
    let response = "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, –æ—Å–Ω–∞—â–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–¥–æ–≤–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ –æ–±—â–∞—Ç—å—Å—è —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º, –Ω–æ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. –ù–∞—à –±–æ—Ç, –±–∞–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ GPT-3.5 Turbo, —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –≤–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ–º–æ—â—å –∏ –¥–∞–∂–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å, –∏ –Ω–∞—à –±–æ—Ç –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –Ω–∞–∏–ª—É—á—à–∏–π –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç. –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º? –≠—Ç–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –æ–±—É—á–µ–Ω–∞ –Ω–∞ –æ–≥—Ä–æ–º–Ω–æ–º –æ–±—ä–µ–º–µ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –µ–π –ø–æ–Ω–∏–º–∞—Ç—å –≤–∞—Å –ª—É—á—à–µ –∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–¥–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã. –ë—É–¥—å —Ç–æ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á, –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –¥–∞–∂–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–º—ã, –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é —Å –≤–∞–º–∏. –ü–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ –º–æ—â—å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –æ–±—â–∞—è—Å—å —Å –Ω–∞—à–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–æ–º."
  
    await ctx.reply(response)
    
  } catch (error) {
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
  }
})

bot.on('text', (ctx) => {
    ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏.')
})

bot.launch()